"""
Урок 2. Встроенные типы и операции с ними
1. Создать список и заполнить его элементами различных типов данных.
Реализовать скрипт проверки типа данных каждого элемента.
Использовать функцию type() для проверки типа.
Элементы списка можно не запрашивать у пользователя, а указать явно, в программе.
"""
l: list = [1, True, None, (0, 1), [0, 1], {0: 1}, None, print, object]
for i in l:
    print(f"{i} - тип - {type(i)}")

"""
2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т.д.
При нечетном количестве элементов последний сохранить на своем месте.
Для заполнения списка элементов необходимо использовать функцию input().
"""
l: list = [1, True, None, (0, 1), [0, 1], {0: 1}, None, print, object]
cnt: int = int(input("Количество элементов списка:"))
for i in range(cnt):
    l.append(input(f"Значение элемента {i + 1}:"))
if 3 > 1:
    for i in range(1, len(l), 2):
        l[i - 1], l[i] = l[i], l[i - 1]

print(l)

"""
3. Пользователь вводит месяц в виде целого числа от 1 до 12.
Сообщить к какому времени года относится месяц (зима, весна, лето, осень).
Напишите решения через list и через dict.
"""
season_d: dict = {0: 'зима', 1: 'весна', 2: 'лето', 3: 'осень'}
season_l: list = ['зима', 'весна', 'лето', 'осень']
while True:
    m: int = int(input("Mесяц в виде целого числа от 1 до 12:"))
    if not 1 <= m <= 12:
        continue
    m: int = m // 3
    m = 0 if m == 4 else m
    print(f"через dict, это - {season_d.get(m)}")
    print(f"через list, это - {season_l[m]}")

"""
4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.
"""
sl: str = input("Строка из нескольких слов:").split()
for e, i in enumerate(sl):
    print(f"{e}. {i[:10]}")

"""
5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел.
У пользователя необходимо запрашивать новый элемент рейтинга.
Если в рейтинге существуют элементы с одинаковыми значениями,
то новый элемент с тем же значением должен разместиться после них.
Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].
"""
my_list = [7, 5, 3, 3, 2]
while True:
    i = input("новый элемент рейтинга:")
    if i == "":
        break;
    elif i.isdigit():
        i = int(i)
    else:
        continue
    if i in my_list:
        my_list.insert(len(my_list) - my_list[::-1].index(i) - 1, i)
    elif i < my_list[len(my_list) - 1]:
        my_list.append(i)
    elif i > my_list[0]:
        my_list.insert(0, i)
    print(my_list)

"""
6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей. Каждый кортеж хранит информацию об отдельном товаре.
В кортеже должно быть два элемента — номер товара и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения).
Структуру нужно сформировать программно, т.е. запрашивать все данные у пользователя.
Пример готовой структуры:
[

(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
(2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}), 
(3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})

]
Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара, например название, а значение — список значений-характеристик, например список названий товаров.
Пример:
{

“название”: [“компьютер”, “принтер”, “сканер”],
“цена”: [20000, 6000, 2000],
“количество”: [5, 2, 7],
“ед”: [“шт.”]

}
"""


def typening(txt: str = "значение", tp: str = "str"):
    while True:
        t = input(f"Введите {txt} :")
        if not t:
            return
        if tp == "str":
            return t
        elif tp == "int":
            if t.isdigit():
                return int(t)
            else:
                print("(!)-некорректное число->")
                continue


l: list = []
while True:
    name: str = typening("название")
    if not name:
        break
    price: int = typening("цена", "int")
    if not price:
        break
    amount: int = typening("количество", "int")
    if not amount:
        break
    unit: int = typening("единицы измерения", "str")
    if not unit:
        break

    for i in l:
        if i[1]["название"] == name and i[1]["цена"] == price and i[1]["eд"] == unit:
            i[1]["количество"] += amount
            name = ""
            print("(sum)-OK->")
        continue
    if name:
        l.append((len(l) + 1, {"название": name, "цена": price, "количество": amount, "eд": unit}))
        print("(add)-OK->")

sname: set = set()
sprice: set = set()
samount: set = set()
sunit: set = set()

for i in l:
    sname.add(i[1]["название"])
    sprice.add(i[1]["цена"])
    samount.add(i[1]["количество"])
    sunit.add(i[1]["eд"])
a: dict = {"название": list(sname), "цена": list(sprice), "количество": list(samount), "eд": list(sunit)}

print(a)
